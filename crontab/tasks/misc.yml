---
# TODO: make over all of this. move it to configs(role) and use cron_file: instead
# tasks file for crontab
# - name: Crontab | copy crontab files for root
#   copy:
#     src: "files/root/"
#     dest: "/root/"
#     owner: root
#     group: root
#     mode: 0750
#   when: crntb_activate_cronjobs
#   tags: 
#     - #test

- name: Crontab | copy crontab files others
  copy:
    src: "files/home/"
    dest: "/home/"
    owner: ibrahim
    group: ibrahim
    mode: 0755
  when: crntb_activate_cronjobs or crntb_actvt_crnjbs_vrnssg

- name: Crontab | cronjob 1min.sh
  cron:
    name: "Starting 1 minute job - 1min.sh"
    user: root
    job:  "/root/1min.sh > /dev/null 2>&1"
    state: present
    backup: False 
    minute: "*/1" # Minute when the job should run ( 0-59, *, */2, etc )
    hour: "*" # Hour when the job should run ( 0-23, *, */2, etc )
    day: "*" # Day of the month the job should run ( 1-31, *, */2, etc )
    month: "*" # Month of the year the job should run ( 1-12, *, */2, etc )
    weekday: "*" # Day of the week that the job should run ( 0-6 for Sunday-Saturday, *, etc )
    disabled: False # If the job should be disabled (commented out) in the crontab. Only has effect if C(state=present).
  when: crntb_activate_cronjobs
  tags: 
    - #test

- name: Crontab | cronjob ansible.sh
  cron:
    name: "Starting CI/CD cronjob ansible.sh"
    user: ibrahim
    job: "bash /home/ibrahim/ansible.sh"
    #job: "/root/ansible.sh > /dev/null 2>&1"
    state: present
    backup: False 
    minute: "*/2" # Minute when the job should run ( 0-59, *, */2, etc )
    hour: "*" # Hour when the job should run ( 0-23, *, */2, etc )
    day: "*" # Day of the month the job should run ( 1-31, *, */2, etc )
    month: "*" # Month of the year the job should run ( 1-12, *, */2, etc )
    weekday: "*" # Day of the week that the job should run ( 0-6 for Sunday-Saturday, *, etc )
    disabled: true # If the job should be disabled (commented out) in the crontab. Only has effect if C(state=present).
  when: crntb_activate_cronjobs

- name: Crontab | cronjob vernissage.sh
  cron:
    name: "Starting CI/CD cronjob vernissage.sh"
    user: ibrahim
    job: "python3 /home/ibrahim/vernissage.py"
    state: present
    backup: False 
    minute: "*/2" # Minute when the job should run ( 0-59, *, */2, etc )
    hour: "*" # Hour when the job should run ( 0-23, *, */2, etc )
    day: "*" # Day of the month the job should run ( 1-31, *, */2, etc )
    month: "*" # Month of the year the job should run ( 1-12, *, */2, etc )
    weekday: "*" # Day of the week that the job should run ( 0-6 for Sunday-Saturday, *, etc )
    disabled: true # If the job should be disabled (commented out) in the crontab. Only has effect if C(state=present).
  when: crntb_actvt_crnjbs_vrnssg

- name: Crontab | cronjob crntb_fldr_lst
  copy:
    src: "files/{{item.fldr}}/crontab"
    dest: "/opt/"
    owner: ibrahim
    group: ibrahim
    mode: 0744
  with_items:
    "{{ crntb_fldr_lst }}"
  when: crntb_fldr_lst.0 is defined
  tags: 
    - #test
#
- name: Crontab | /*REMOVE*/ cronjob vernissage.sh
  cron:
    name: "Starting CI/CD cronjob vernissage.sh"
    user: ibrahim
    job: "python3 /home/ibrahim/vernissage.py"
    state: absent
    backup: False 
    minute: "*/2" # Minute when the job should run ( 0-59, *, */2, etc )
    hour: "*" # Hour when the job should run ( 0-23, *, */2, etc )
    day: "*" # Day of the month the job should run ( 1-31, *, */2, etc )
    month: "*" # Month of the year the job should run ( 1-12, *, */2, etc )
    weekday: "*" # Day of the week that the job should run ( 0-6 for Sunday-Saturday, *, etc )
    disabled: true # If the job should be disabled (commented out) in the crontab. Only has effect if C(state=present).
  when: not crntb_actvt_crnjbs_vrnssg



# /****/

# - name: 'Ensure an old job is no longer present. Removes any job that is prefixed by "#Ansible: an old job" from the crontab'
#   cron:
#     name: "an old job"
#     state: absent

# - name: Creates an entry like "@reboot /some/job.sh"
#   cron:
#     name: "a job for reboot"
#     special_time: reboot
#     job: "/some/job.sh"
#
# cron:
#   name:  # not required. Description of a crontab entry or, if env is set, the name of environment variable. Required if C(state=absent). Note that if name is not set and C(state=present), then a new crontab entry will always be created, regardless of existing ones. This parameter will always be required in future releases.
#   user:  # not required. The specific user whose crontab should be modified. When unset, this parameter defaults to using C(root).
#   job:  # not required. The command to execute or, if env is set, the value of environment variable. The command should not contain line breaks. Required if C(state=present).
#   state: absent # not required. choices: absent;present. Whether to ensure the job or environment variable is present or absent.
#   cron_file:  # not required. If specified, uses this file instead of an individual user's crontab. If this is a relative path, it is interpreted with respect to I(/etc/cron.d). If it is absolute, it will typically be I(/etc/crontab). Many linux distros expect (and some require) the filename portion to consist solely of upper- and lower-case letters, digits, underscores, and hyphens. To use the C(cron_file) parameter you must specify the C(user) as well.
#   backup: False # not required. If set, create a backup of the crontab before it is modified. The location of the backup is returned in the C(backup_file) variable by this module.
#   minute: * # not required. Minute when the job should run ( 0-59, *, */2, etc )
#   hour: * # not required. Hour when the job should run ( 0-23, *, */2, etc )
#   day: * # not required. Day of the month the job should run ( 1-31, *, */2, etc )
#   month: * # not required. Month of the year the job should run ( 1-12, *, */2, etc )
#   weekday: * # not required. Day of the week that the job should run ( 0-6 for Sunday-Saturday, *, etc )
#   reboot: False # not required. If the job should be run at reboot. This option is deprecated. Users should use special_time.
#   special_time: annually # not required. choices: annually;daily;hourly;monthly;reboot;weekly;yearly. Special time specification nickname.
#   disabled: False # not required. If the job should be disabled (commented out) in the crontab. Only has effect if C(state=present).
#   env: False # not required. If set, manages a crontab's environment variable. New variables are added on top of crontab. C(name) and C(value) parameters are the name and the value of environment variable.
#   insertafter:  # not required. Used with C(state=present) and C(env). If specified, the environment variable will be inserted after the declaration of specified environment variable.
#   insertbefore:  # not required. Used with C(state=present) and C(env). If specified, the environment variable will be inserted before the declaration of specified environment variable.