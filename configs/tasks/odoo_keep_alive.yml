---
- name: Iterate targets (each with distinct creds)
  vars:
    site_targets:
      - { url: 'https://boboconsult.odoo.com/odoo', username: 'website@opendotsolutions.com', password: 'Qwertzuiop123', login_path: '/post' }
      - { url: 'https://httpbin.org', username: 'bob', password: 'secret2', login_path: '/post' }
    # site_targets: "{{ site_targets | default([]) }}"
    path_prefix: "/odoo"          # your instance prefix
    login_path: "/web/login"      # Odoo's login endpoint
    validate_certs: true
    timeout_s: 15
  loop: "{{ site_targets }}"
  loop_control:
    label: "{{ item.url }}"
  block:

    - name: GET login page to obtain session + CSRF
      ansible.builtin.uri:
        url: "{{ item.url | regex_replace('/$', '') }}{{ path_prefix }}{{ login_path }}"
        method: GET
        return_content: true
        validate_certs: "{{ validate_certs }}"
        timeout: "{{ timeout_s }}"
        follow_redirects: all
        # Persist cookies across this block
        use_cookies: true
      register: login_page
      changed_when: false
      failed_when: false

    - name: Extract csrf_token from the HTML
      ansible.builtin.set_fact:
        odoo_csrf: "{{ (login_page.content | regex_search('name=\"csrf_token\"[^>]*value=\"([^\"]+)\"', '\\1')) | default('', true) }}"
      changed_when: false

    - name: POST login form with csrf_token
      ansible.builtin.uri:
        url: "{{ item.url | regex_replace('/$', '') }}{{ path_prefix }}{{ login_path }}"
        method: POST
        body_format: form-urlencoded
        body:
          login: "{{ item.username }}"
          password: "{{ item.password }}"
          csrf_token: "{{ odoo_csrf }}"
          redirect: "/web"
          # uncomment if you must force a db (multi-db setups)
          # db: "{{ item.db | default(omit) }}"
        validate_certs: "{{ validate_certs }}"
        timeout: "{{ timeout_s }}"
        follow_redirects: none     # see 302 directly
        use_cookies: true
      register: login_post
      changed_when: false
      failed_when: false

    - name: Show status for this URL
      ansible.builtin.debug:
        msg: >-
          URL={{ item.url }} | POST {{ path_prefix }}{{ login_path }} | status={{ login_post.status }}
          {{ ('| note=' + login_post.msg) if login_post.msg is defined else '' }}
