---
# get most stuff here:
# https://betterstack.com/community/guides/logging/monitoring-linux-auth-logs/
# https://www.2daygeek.com/check-track-successful-failed-login-attempts-linux/
#
# - name: Job 00 | Import GPG Key
#   apt_key:
#     url: https://raw.githubusercontent.com/filebot/plugins/master/gpg/maintainer.pub # not required. The URL to retrieve key from.
#     state: present # not required. choices: absent;present. Ensures that the key is present (added) or absent (revoked).
#     keyring: /etc/apt/trusted.gpg.d/ # not required. The full path to specific keyring file in /etc/apt/trusted.gpg.d/
#     validate_certs: no # not required. If C(no), SSL certificates for the target url will not be validated. This should only be used on personally controlled sites using self-signed certificates.
# #
# - name: Job 01 | Add filebot Repo
#   apt_repository:
#     #repo: deb [arch={{ [ansible_architecture] | map('extract', deb_architecture) | first }}] https://get.filebot.net/deb/{{ ansible_system | lower }}/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
#     repo: deb [arch=all] https://get.filebot.net/deb/ universal main # TODO use facts variables
#     state: present # not required. choices: absent;present. A source string state.
#     mode: 0644 # not required. The octal mode for newly created files in sources.list.d
#     update_cache: yes # not required. Run the equivalent of C(apt-get update) when a change occurs.  Cache updates are run after making changes.
#     validate_certs: no
#   when: instl_filebot_pckg
#   tags:
#     - #test
# 
## --break-system-packages
# - name: Job 02 | Install FileBot
#   package:
#     name: "{{item}}"
#     state: present
#   with_items:
#   - filebot
#   - ffmpeg
#   - libavcodec-extra 
#   - x264
#   - default-jdk
#   - #openjdk17-headless
#   - libavcodec-extra
#   when: instl_filebot_pckg
#   tags:
#     - #test
#
- name: Job 00 | curl vector
  ansible.builtin.shell:
    cmd:  bash -c "$(curl -L https://setup.vector.dev)"
#
- name: Job 01 | Install Vector
  package:
    name: 
      - vector
      - auditd
      - syslog-ng
    state: present
#
- name: Job 02 | copy Vector config file
  ansible.builtin.copy:
    src: files/vector.yaml
    dest: /etc/vector/vector.yaml
    owner: root
    group: root
    mode: '0644'
#
- name: Job 03 | copy logify file
  ansible.builtin.copy:
    src: files/logify.sh
    dest: /root/logify.sh
    owner: root
    group: root
    mode: '0744'
#
- name: Job 04 | start as a demon
  systemd:
    name: vector
      #- audit
    state: started # not required. choices: reloaded;restarted;started;stopped. C(started)/C(stopped) are idempotent actions that will not run commands unless necessary. C(restarted) will always bounce the service. C(reloaded) will always reload.
    enabled:  yes
    scope: system # not required. choices: system;user;global. run systemctl within a given service manager scope, either as the default system scope (system), the current user's scope (user), or the scope of all users (global). For systemd to work with 'user', the executing user must have its own instance of dbus started (systemd requirement). The user dbus process is normally started during normal login, but not during the run of Ansible tasks. Otherwise you will probably get a 'Failed to connect to bus: no such file or directory' error.
    